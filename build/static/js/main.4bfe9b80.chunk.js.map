{"version":3,"sources":["components/Filter.jsx","components/Notification.jsx","components/PersonForm.jsx","components/Persons.jsx","services/persons.js","App.jsx","index.jsx"],"names":["Filter","searchText","handleSearchTextboxChange","value","onChange","getStyle","isErrorMessage","commonStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","color","Notification","message","style","defaultProps","PersonForm","handleSubmit","newName","newNumber","handleNameTextboxChange","handleNumberTextboxChange","onSubmit","type","Persons","persons","text","actualPersons","actualSearchText","handleDelete","filter","person","name","includes","map","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchText","notificationMessage","setNotificationMessage","setIsErrorMessage","useEffect","personsService","initialPersonList","showNotificationMessage","isError","setTimeout","event","target","preventDefault","checkIfNameIsFound","find","undefined","newPerson","returnedPerson","concat","catch","error","window","confirm","changedPerson","currentPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bfe9b80.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Filter = ({ searchText, handleSearchTextboxChange }) => (\n  <div>\n    filter shown with{\" \"}\n    <input value={searchText} onChange={handleSearchTextboxChange} />\n  </div>\n);\n\nFilter.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  handleSearchTextboxChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\n\nconst getStyle = (isErrorMessage) => {\n  const commonStyle = {\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n  return isErrorMessage\n    ? { ...commonStyle, color: \"red\" }\n    : { ...commonStyle, color: \"green\" };\n};\n\nconst Notification = ({ message, isErrorMessage }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div style={getStyle(isErrorMessage)}>{message}</div>;\n};\n\nNotification.defaultProps = {\n  message: null,\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n  isErrorMessage: PropTypes.bool.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from \"prop-types\";\n\nconst PersonForm = ({\n  handleSubmit,\n  newName,\n  newNumber,\n  handleNameTextboxChange,\n  handleNumberTextboxChange,\n}) => (\n  <div>\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameTextboxChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberTextboxChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </div>\n);\n\nPersonForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  newName: PropTypes.string.isRequired,\n  newNumber: PropTypes.string.isRequired,\n  handleNameTextboxChange: PropTypes.func.isRequired,\n  handleNumberTextboxChange: PropTypes.func.isRequired,\n};\n\nexport default PersonForm;\n","import PropTypes from \"prop-types\";\n\nconst Persons = ({ actualPersons, actualSearchText, handleDelete }) => {\n  const PersonsWith = (persons, text) =>\n    persons.filter((person) => person.name.includes(text));\n\n  return (\n    <div>\n      {PersonsWith(actualPersons, actualSearchText).map((person) => (\n        <p key={person.name}>\n          {person.name} {person.number}{\" \"}\n          <button type=\"button\" onClick={() => handleDelete(person)}>\n            delete\n          </button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nPersons.propTypes = {\n  actualPersons: PropTypes.array.isRequired,\n  actualSearchText: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteElementWithId = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default { getAll, create, update, deleteElementWithId };\n","import { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personsService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [isErrorMessage, setIsErrorMessage] = useState(false);\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then((initialPersonList) => setPersons(initialPersonList));\n  }, []);\n\n  const handleNameTextboxChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberTextboxChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchTextboxChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const showNotificationMessage = (message, isError) => {\n    setNotificationMessage(message);\n    setIsErrorMessage(isError);\n    setTimeout(() => setNotificationMessage(null), 5000);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const checkIfNameIsFound = persons.find(\n      (person) => person.name === newName\n    );\n    if (checkIfNameIsFound === undefined) {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      };\n      personsService\n        .create(newPerson)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          showNotificationMessage(`Added ${newPerson.name}`, false);\n        })\n        .catch(error => {\n          showNotificationMessage(`${error.response.data.error}`, true);\n        });\n      \n    } else if (\n      // eslint-disable-next-line no-alert\n      window.confirm(\n        `${checkIfNameIsFound.name} is already added to the phonebook, replace the old number with a new one?`\n      )\n    ) {\n      const changedPerson = { ...checkIfNameIsFound, number: newNumber };\n      personsService\n        .update(changedPerson.id, changedPerson)\n        .then((returnedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id !== changedPerson.id ? person : returnedPerson\n            )\n          );\n          showNotificationMessage(`Updated ${changedPerson.name}'s number`, false);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch(error => {\n          showNotificationMessage(`${error.response.data.error}`, true);\n        });\n      \n    }\n  };\n\n  const handleDelete = (person) => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService.deleteElementWithId(person.id).catch(() => {\n        showNotificationMessage(\n          `Information of ${person.name} has already been removed from server`,\n          true\n        );\n      });\n      \n      setPersons(\n        persons.filter((currentPerson) => person.name !== currentPerson.name)\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={notificationMessage}\n        isErrorMessage={isErrorMessage}\n      />\n      <Filter\n        searchText={searchText}\n        handleSearchTextboxChange={handleSearchTextboxChange}\n      />\n      <h3>Add a new</h3>\n      <PersonForm\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameTextboxChange={handleNameTextboxChange}\n        handleNumberTextboxChange={handleNumberTextboxChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        actualPersons={persons}\n        actualSearchText={searchText}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}